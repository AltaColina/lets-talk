@page "/room/{id}"
@using System.Text;
@implements IDisposable
@inject UserRoomsStateProvider UserRooms
@inject IMessenger Messenger
@inject ILetsTalkHubClient HubClient

<PageTitle>Let's Talk - @UserRooms.RoomsById.GetValueOrDefault(Id)?.Name</PageTitle>

<RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">
    @foreach (var message in messages)
    {
        <RadzenStack Gap="1rem" class="rz-background-color-primary-lighter">
            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">@($"{message.UserName} {message.Timestamp:R}")</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@System.Text.Encoding.UTF8.GetString(message.Content)</b></RadzenText>
            </RadzenStack>
    }
    <RadzenStack Orientation="Orientation.Horizontal">
        <RadzenTextBox class="flex-fill" @bind-Value="@messageText">

        </RadzenTextBox>
        <RadzenButton Click="@SendContentMessage" Disabled="@(String.IsNullOrEmpty(messageText))">
            Send
        </RadzenButton>
    </RadzenStack>
</RadzenStack>

@code {
    [Parameter]
    public required string Id { get; set; }

    private string? messageText;

    private readonly List<ContentMessage> messages = new();

    protected override void OnInitialized()
    {
        Messenger.Register<ContentMessage, string>(this, Id, OnNewContentMessage);
    }

    protected override void OnParametersSet()
    {
        messages.Clear();
        messages.AddRange(UserRooms.GetRoomMessages(Id));
    }

    private void OnNewContentMessage(object sender, ContentMessage message)
    {
        messages.Add(message);
        StateHasChanged();
    }

    public void Dispose()
    {
        Messenger.Unregister<ContentMessage, string>(this, Id);
    }

    private async Task SendContentMessage()
    {
        if (!String.IsNullOrEmpty(messageText))
        {
            await HubClient.SendContentMessageAsync(Id, "text/plain", Encoding.UTF8.GetBytes(messageText));
            messageText = null;
        }
    }
}
